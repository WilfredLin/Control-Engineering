import numpy as np
import matplotlib.pyplot as plt
from scipy import signal

# Define the transfer function parameters
numerator = [1]  # Example numerator coefficients for G(s)
denominator = [1, 2, 1]  # Example denominator coefficients for G(s)
system = signal.TransferFunction(numerator, denominator)

# Frequency range for Bode plot
w = np.logspace(-1, 2, 1000)  # Frequency from 0.1 to 100 rad/s

# Bode plot
w, mag, phase = signal.bode(system, w)

# Calculate static error constants
Kp = np.abs(system.num[0][0]) / np.abs(system.den[0][0])  # Proportional constant
Kv = np.abs(system.num[0][0]) / np.abs(system.den[0][1])  # Velocity constant
Ka = np.abs(system.num[0][0]) / np.abs(system.den[0][2])  # Acceleration constant

# Plotting Bode Magnitude and Phase
plt.figure(figsize=(12, 8))

plt.subplot(2, 1, 1)
plt.semilogx(w, mag)  # Bode magnitude plot
plt.title('Bode Plot')
plt.ylabel('Magnitude (dB)')
plt.grid()

plt.subplot(2, 1, 2)
plt.semilogx(w, phase)  # Bode phase plot
plt.ylabel('Phase (degrees)')
plt.xlabel('Frequency (rad/s)')
plt.grid()

plt.tight_layout()
plt.show()

# Output results
print(f'Static Error Constants:')
print(f'Proportional Constant (Kp): {Kp:.2f}')
print(f'Velocity Constant (Kv): {Kv:.2f}')
print(f'Acceleration Constant (Ka): {Ka:.2f}')
