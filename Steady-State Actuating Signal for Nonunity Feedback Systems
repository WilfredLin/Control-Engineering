import numpy as np
import matplotlib.pyplot as plt
from scipy import signal

# Define the system transfer function parameters: G(s) = K / (s^2 + 2*zeta*wn*s + wn^2)
wn = 1.0  # Natural frequency
zeta = 0.5  # Damping ratio
K = 1.0  # Gain
H = 0.5  # Feedback factor for non-unity feedback

# Create a function to compute the steady-state actuating signal for non-unity feedback systems
def steady_state_actuating_signal_nonunity(K, wn, zeta, H, d):
    # The steady-state actuating signal for a unit step disturbance in a non-unity feedback system
    u_ss = K * wn**2 * (1 + H) * d
    return u_ss

# Define the disturbance input
disturbance = 1.0  # Step disturbance (magnitude)

# Calculate the steady-state actuating signal for the given disturbance
u_ss = steady_state_actuating_signal_nonunity(K, wn, zeta, H, disturbance)

# Print the result
print(f'Steady-State Actuating Signal due to step disturbance in non-unity feedback system: {u_ss:.2f}')

# Plotting the response of the system to the disturbance
time = np.linspace(0, 10, 1000)
t, y = signal.step(signal.TransferFunction([K], [1, 2*zeta*wn, wn**2]), T=time)

plt.plot(t, y, label='System Response')
plt.axhline(y=disturbance, color='r', linestyle='--', label='Disturbance Input')
plt.title('System Response to Step Disturbance (Non-Unity Feedback)')
plt.xlabel('Time (s)')
plt.ylabel('Response')
plt.legend()
plt.grid()
plt.show()
