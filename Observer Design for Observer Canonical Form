class Observer:
    def update(self, message):
        pass

class ConcreteObserverA(Observer):
    def update(self, message):
        print(f'ConcreteObserverA received: {message}')

class ConcreteObserverB(Observer):
    def update(self, message):
        print(f'ConcreteObserverB received: {message}')

class Subject:
    def __init__(self):
        self._observers = []

    def attach(self, observer):
        self._observers.append(observer)

    def detach(self, observer):
        self._observers.remove(observer)

    def notify(self, message):
        for observer in self._observers:
            observer.update(message)

# Example usage
if __name__ == '__main__':
    subject = Subject()
    observer_a = ConcreteObserverA()
    observer_b = ConcreteObserverB()

    subject.attach(observer_a)
    subject.attach(observer_b)

    subject.notify('Hello Observers!')
