import numpy as np

# Define a complex function
def complex_function(z):
    return z**2 + (1 + 1j)*z + 1j

# Evaluate the function over a grid of complex numbers
def evaluate_complex_function(real_range, imag_range, num_points):
    real_values = np.linspace(real_range[0], real_range[1], num_points)
    imag_values = np.linspace(imag_range[0], imag_range[1], num_points)
    Z = np.array(np.meshgrid(real_values, imag_values)).T.reshape(-1, 2)
    complex_numbers = Z[:, 0] + 1j * Z[:, 1]
    results = complex_function(complex_numbers)
    return results

# Define ranges and number of points
real_range = (-2, 2)
imag_range = (-2, 2)
num_points = 100

# Evaluate the function
results = evaluate_complex_function(real_range, imag_range, num_points)

# Print the results
print(results)
